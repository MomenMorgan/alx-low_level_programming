#include <stdlib.h>
#include "main.h"

/**
 * *_realloc - reallocates a memory block
 * @ptr: pointer to the memory previsouly allocated by malloc
 * @old_size: size of the allocated memory
 * @new_size: new size of the new memory
 * Return: pointer to a fresh created block
 */
void *_realloc(void *ptr, unsigned int old_size, unsigned int new_size)
{
    unsigned int i;
	char *first_ptr;
	char *back;

/*f new_size == old_size do not do anything and return ptr*/

	if (new_size == old_size)
		return (ptr);

	if (new_size == 0 && ptr)
	{
		free(ptr);
		return (NULL);
	}

	if (!ptr)
		return (malloc(new_size));

	first_ptr = malloc(new_size);
	if (!first_ptr)
		return (NULL);

	back = ptr;

	if (new_size < old_size)
	{
		for (i = 0; i < new_size; i++)
			first_ptr[i] = back[i];
	}

	/*f new_size > old_size, the “added” memory should not be initialized*/

	if (new_size > old_size)
	{
		for (i = 0; i < old_size; i++)
			first_ptr[i] = back[i];
	}

	free(ptr);
	return (first_ptr);
}
